Timer unit: 1e-06 s

Total time: 1.06028 s
File: task2.py
Function: gauss_seidel_list at line 43

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    43                                           @profile
    44                                           def gauss_seidel_list(f, N):
    45        90        354.4      3.9      0.0      newf = f.copy()
    46      4410       2031.5      0.5      0.2      for i in range(1,len(newf)-1):
    47    271680     142716.0      0.5     13.5          for j in range(1,len(newf[0])-1):
    48    802080     578913.0      0.7     54.6              newf[i][j] = 0.25 * (newf[i][j+1] + newf[i][j-1] +
    49    534720     336186.2      0.6     31.7                  newf[i+1][j] + newf[i-1][j])
    50
    51        90         75.9      0.8      0.0      return newf

Total time: 1.28179 s
File: task2.py
Function: gauss_seidel_array at line 32

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    32                                           @profile
    33                                           def gauss_seidel_array(f, N):
    34        90       3292.6     36.6      0.3      newf = copy.deepcopy(f)
    35
    36      4410       2107.9      0.5      0.2      for i in range(1,N-1):
    37    271680     132904.0      0.5     10.4          for j in range(1,N-1):
    38    802080     741482.8      0.9     57.8              newf[i*N + j] = 0.25 * (newf[i*N + j+1] + newf[i*N + j-1] +
    39    534720     401929.9      0.8     31.4                  newf[(i+1)*N+j] + newf[(i-1)*N + j])
    40
    41        90         69.9      0.8      0.0      return newf

Total time: 1.48046 s
File: task2.py
Function: gauss_seidel_numpy at line 21

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    21                                           @profile
    22                                           def gauss_seidel_numpy(f, N):
    23        90       2053.2     22.8      0.1      newf = f.copy()
    24
    25      4410       2159.1      0.5      0.1      for i in range(1,newf.shape[0]-1):
    26    271680     141460.8      0.5      9.6          for j in range(1,newf.shape[1]-1):
    27    802080     885553.0      1.1     59.8              newf[i,j] = 0.25 * (newf[i,j+1] + newf[i,j-1] +
    28    534720     449160.4      0.8     30.3                  newf[i+1,j] + newf[i-1,j])
    29
    30        90         77.7      0.9      0.0      return newf

  1.06 seconds - task2.py:43 - gauss_seidel_list
  1.28 seconds - task2.py:32 - gauss_seidel_array
  1.48 seconds - task2.py:21 - gauss_seidel_numpy